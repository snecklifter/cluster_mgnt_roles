---
# tasks file for create_cluster

# TODO: use the variable for cluster_network_host_prefix
- name: Create cluster
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}"
    method: POST
    url_username: "{{ HTTP_AUTH_USERNAME }}"
    url_password: "{{ HTTP_AUTH_PASSWORD }}"
    body_format: json
    status_code: [201]
    return_content: True
    body: {
        "name": "{{ CLUSTER_NAME }}",
        "openshift_version": "{{ OPENSHIFT_VERSION }}",
        "base_dns_domain": "{{ BASE_DNS_DOMAIN }}",
        "cluster_network_cidr": "{{ CLUSTER_NETWORK_CIDR }}",
        "cluster_network_host_prefix": 23,
        "service_network_cidr": "{{ SERVICE_NETWORK_CIDR }}",
        "ingress_vip": "{{ INGRESS_VIP }}",
        "pull_secret": "{{ PULL_SECRET | to_json }}",
        "ssh_public_key": "{{ SSH_PUBLIC_KEY }}",
        "vip_dhcp_allocation": "{{ VIP_DHCP_ALLOCATION | lower | bool }}",
        "api_vip": "{{ API_VIP }}",
        "http_proxy": "{{ HTTP_PROXY }}",
        "https_proxy": "{{ HTTPS_PROXY }}",
        "no_proxy": "{{ NO_PROXY }}",
        "additional_ntp_source": "{{ NTP_SERVER }}"
    }
  when: create | bool == True
  register: http_reply

- debug:
    var: http_reply.json
  when: debug and create  | bool == True

- name: Set the cluster ID
  set_fact:
    cluster_id: "{{ http_reply.json.id }}"
  when: create | bool == True

- name: "Save cluster_id"
  copy:
    content: "{{ cluster_id }}"
    dest: cluster.txt
  delegate_to: localhost
  become: no
  when: create | bool == True


##### TO REMOVE ####
- name: Get discovery ignition file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/discovery-ignition"
    method: GET
    status_code: [200]
    return_content: True
  register: discovery_ignition

- debug:
    var: discovery_ignition.json
  when: debug | bool == True

- name: "Copy discovery_ignition cluster_id"
  copy:
    content: "{{ discovery_ignition.json }}"
    dest: discovery-ignition-before.txt
  delegate_to: localhost
  become: no

##### TO REMOVE ####

#### patch discovery ignition on restricted network environments ###

- name: Load patch for search registries
  set_fact:
    search_registries: "{{ lookup('template', 'patch-search-registries.j2') }}"
  when: disconnected | bool == True

- debug:
    var: search_registries
  when: debug and disconnected  | bool == True

- name: Load patch for discovery ignition
  set_fact:
    patch_discovery_ignition: "{{ lookup('template', 'patch-discovery-ignition.j2') }}"
  when: disconnected | bool == True

- debug:
    var: patch_discovery_ignition
  when: debug and disconnected  | bool == True

- name: Patch discovery ignition
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/discovery-ignition"
    method: PATCH
    status_code: [201]
    return_content: True
    body_format: json
    body: { "config": "{{ patch_discovery_ignition | to_json(ensure_ascii=False) | string }}" }
  when: disconnected | bool == True
  register: http_reply

- debug:
    var: http_reply
  when: debug and disconnected  | bool == True

- name: Get discovery ignition file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/discovery-ignition"
    method: GET
    status_code: [200]
    return_content: True
  register: discovery_ignition

- debug:
    var: discovery_ignition.json
  when: debug | bool == True

- name: "Copy discovery_ignition.json"
  copy:
    content: "{{ discovery_ignition.json }}"
    dest: discovery-ignition.txt
  delegate_to: localhost
  become: no

#### patch cluster install config on restricted network environments ###

- name: Get install-config file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    method: GET
    status_code: [200]
    return_content: True
  register: install_config

- debug:
    var: install_config.json
  when: debug | bool == True

- name: "Copy install_config"
  copy:
    content: "{{ install_config.json }}"
    dest: install-config.txt
  delegate_to: localhost
  become: no

#TODO: the mirror certificate needs padding (4 spaces) at the begining of each line
- name: Load patch for install config
  set_fact:
    patch_install_config: "{{ lookup('template', 'patch-install-config.j2') | from_yaml | to_json(ensure_ascii=False) | string }}"
  when: disconnected | bool == True

- debug:
    var: patch_install_config
  when: debug and disconnected  | bool == True

- name: Patch install config
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    method: PATCH
    status_code: [201]
    return_content: True
    body_format: json
    body: "{{ patch_install_config | to_json(ensure_ascii=False) | string }}"
  when: disconnected | bool == True
  register: http_reply

- debug:
    var: http_reply
  when: debug and disconnected  | bool == True

- name: Get install-config file
  uri:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    method: GET
    status_code: [200]
    return_content: True
  register: install_config

- debug:
    var: install_config.json
  when: debug | bool == True

- name: "Copy install_config-json to patched-config.txt"
  copy:
    content: "{{ install_config.json }}"
    dest: patched-config.txt
  delegate_to: localhost
  become: no

#TODO: Apply manifests before cluster installation

- name: Apply manifests before cluster installation
  include_tasks: manifest.yml
  with_items:
    - 50-worker-nm-fix-ipv6.yml
    - 50-worker-remove-ipi-leftovers.yml
    - 50-master-scheduler.yml
  when: manifests  | bool == True
